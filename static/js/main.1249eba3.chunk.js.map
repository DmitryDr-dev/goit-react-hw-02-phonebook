{"version":3,"sources":["components/AddContactForm/AddContactForm.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/AddContactForm/AddContactForm.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","AddContactForm","nameInputId","uuidv4","telInputId","handleInputChange","e","currentTarget","name","value","setState","handleSubmit","preventDefault","props","state","newContact","id","onSubmit","resetState","number","this","className","s","addContactForm","htmlFor","addContactFormLabel","type","pattern","title","required","onChange","addContactFormInput","addContactFormBtn","Component","ContactListItem","contactName","contactNumber","onDelete","contactWrap","contactDeleteBtn","onClick","ContactList","contacts","map","contactsItem","Filter","filterInputId","FilterLabel","FilterInput","Section","children","styles","section","Container","container","App","formSubmitHandler","prevState","normalizedName","toLowerCase","find","contact","alert","onDeleteContact","contactId","filter","changeFilter","getFilteredContacts","normalizedFilter","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1249eba3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"AddContactForm_addContactForm__2J91h\",\"addContactFormInput\":\"AddContactForm_addContactFormInput__kyNPR\",\"addContactFormBtn\":\"AddContactForm_addContactFormBtn__3SRXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactWrap\":\"ContactListItem_contactWrap__1Qk6E\",\"contactNumber\":\"ContactListItem_contactNumber__125yk\",\"contactName\":\"ContactListItem_contactName__2NyKF\",\"contactDeleteBtn\":\"ContactListItem_contactDeleteBtn__2HU1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__3hKmZ\",\"FilterLabel\":\"Filter_FilterLabel__S5wNG\",\"FilterInput\":\"Filter_FilterInput__2NOw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1ljvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2MSaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1AYHx\",\"contactsItem\":\"ContactList_contactsItem__2jWaS\"};","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './AddContactForm.module.css';\r\nclass AddContactForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: '',\r\n      name: '',\r\n      number: '',\r\n    };\r\n  }\r\n\r\n  // unique ids for name & tel\r\n  nameInputId = uuidv4();\r\n  telInputId = uuidv4();\r\n\r\n  // method to update state\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // method to send current state back to parent\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { props, state } = this;\r\n\r\n    const newContact = { ...state, id: uuidv4() };\r\n\r\n    props.onSubmit(newContact);\r\n\r\n    this.resetState();\r\n  };\r\n\r\n  // method to clear state\r\n  resetState = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleSubmit,\r\n      handleInputChange,\r\n      nameInputId,\r\n      telInputId,\r\n      state: { name, number },\r\n    } = this;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className={s.addContactForm}>\r\n        <label htmlFor={nameInputId} className={s.addContactFormLabel}>\r\n          Имя\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nameInputId}\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          className={s.addContactFormInput}\r\n        />\r\n        <label htmlFor={telInputId} className={s.addContactFormLabel}>\r\n          Телефон\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={telInputId}\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          className={s.addContactFormInput}\r\n        />\r\n        <button type=\"submit\" className={s.addContactFormBtn}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ id, contactName, contactNumber, onDelete }) {\r\n  return (\r\n    <span className={s.contactWrap}>\r\n      <span>\r\n        <span className={s.contactName}>{contactName}:</span>\r\n        <span className={s.contactNumber}>{contactNumber}</span>\r\n      </span>\r\n      <button\r\n        className={s.contactDeleteBtn}\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </span>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  contactName: PropTypes.string.isRequired,\r\n  contactNumber: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contactsItem}>\r\n            <ContactListItem\r\n              contactName={name}\r\n              contactNumber={number}\r\n              id={id}\r\n              onDelete={onDelete}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  const filterInputId = uuidv4();\r\n\r\n  return (\r\n    <div className={s.Filter}>\r\n      <label className={s.FilterLabel} htmlFor={filterInputId}>\r\n        Filter by Name\r\n      </label>\r\n      <input\r\n        className={s.FilterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        id={filterInputId}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styles from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={styles?.section}>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import styles from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles?.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\n\nimport AddContactForm from './components/AddContactForm/AddContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Section from './components/Section/Section';\nimport Container from './components/Container/Container';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    // should be empty array\n    // ! use several contacts to check functions\n    this.state = {\n      contacts: [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      ],\n      filter: '',\n    };\n  }\n\n  // method to process data sent on form submission\n  formSubmitHandler = newContact => {\n    this.setState(prevState => {\n      const normalizedName = newContact.name.toLowerCase();\n\n      if (\n        prevState.contacts.find(\n          contact => contact.name.toLowerCase() === normalizedName,\n        )\n      ) {\n        alert(`${newContact.name} already exists!`);\n        return;\n      }\n\n      return {\n        contacts: [...prevState.contacts, newContact],\n      };\n    });\n  };\n\n  //\n  onDeleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(\n          contact => contact.id !== contactId,\n        ),\n      };\n    });\n  };\n\n  // method to detect changes in Filter input\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  //\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const {\n      state: { filter },\n      formSubmitHandler,\n      getFilteredContacts,\n      changeFilter,\n    } = this;\n\n    return (\n      <div>\n        <Container>\n          <h1>Phonebook</h1>\n          <Section>\n            <AddContactForm onSubmit={formSubmitHandler} />\n          </Section>\n          <Section title=\"Contacts\">\n            <ContactList\n              contacts={getFilteredContacts()}\n              onDelete={this.onDeleteContact}\n            />\n            <Filter value={filter} onChange={changeFilter} />\n          </Section>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}